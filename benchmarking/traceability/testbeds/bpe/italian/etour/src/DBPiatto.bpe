▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁Java . sql . Connection ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . sql . Statement ; ▁import ▁java . util . ArrayList ; ▁import ▁unisa . gps . etour . bean . BeanPiatto ; ▁/ ▁** ▁* ▁Class ▁that ▁implements ▁the ▁interface ▁plate ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Mart one ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Project ▁- ▁Copy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁public ▁class ▁ DBPiatto ▁implements ▁I DBPiatto ▁( ▁/ ▁/ ▁ Empty ▁constructor ▁public ▁ DBPiatto ▁() ▁( ▁) ▁public ▁boolean ▁cancella Piatto ▁( int ▁pIdPiatto ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁cancellation ▁String ▁query ▁= ▁" DE LE TE ▁FR OM ▁course s ▁W HER E ▁ID ▁=" ▁+ ▁pIdPiatto ; ▁/ ▁/ ▁You ▁run ▁the ▁query ▁Cancellation ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁ 1); ▁) ▁/ ▁/ ▁Al way s ▁runs ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁public ▁boolean ▁inserisci Piatto ▁( BeanPiatto ▁pPiatto ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁the ▁insertion ▁String ▁query ▁= ▁" INSER T ▁I NTO ▁course s ▁( Name , ▁Price , ▁IdMenu ) ▁VALUES ▁( ▁'" ▁P Piatto . getNome ▁+ ▁() ▁+ ▁" ▁'," ▁+ ▁pPiatto . get Prezzo ▁() ▁+ ▁" ' ▁P Piatto . get IdMenu ▁+ ▁() ▁+ ▁")" ; ▁/ ▁/ ▁You ▁run ▁the ▁insert ▁query ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁ 1); ▁) ▁/ ▁/ ▁Al way s ▁runs ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁public ▁boolean ▁modifica Piatto ▁( BeanPiatto ▁pPiatto ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁amendment ▁String ▁query ▁= ▁" UP DATE ▁course s ▁SE T " ▁+ ▁" Name ▁= ▁'" ▁P Piatto . getNome ▁+ ▁() ▁+ ▁" ▁', ▁Price ▁=" ▁+ ▁pPiatto . get Prezzo ▁() ▁+ ▁" , ▁IdMenu ▁=" ▁+ ▁pPiatto . get IdMenu ▁() ▁+ ▁" W HER E ▁Id ▁=" ▁+ ▁P Piatto . getId ▁(); ▁/ ▁/ ▁You ▁run ▁the ▁query ▁for ▁Change ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁ 1); ▁) ▁/ ▁/ ▁Al way s ▁runs ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁< BeanPiatto > ▁ottieni Piatto ▁public ▁ArrayList ▁( int ▁pIdMenu ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁to ▁extract ▁the ▁list ▁of ▁dish es ▁given ▁the ▁id ▁of ▁the ▁Menu ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁course s ▁W HER E ▁IdMenu ▁=" ▁+ ▁pIdMenu ; ▁/ ▁/ ▁The ▁query ▁is ▁execute d ▁result ▁= ▁stat . executeQuery ▁( query ); ▁/ ▁/ ▁List ▁that ▁contains ▁all ▁the ▁plate s ▁obtained ▁< BeanPiatto > ▁ArrayList ▁list ▁= ▁new ▁ArrayList ▁< BeanPiatto > ▁(); ▁/ ▁/ ▁We ▁extract ▁the ▁results ▁from ▁the ▁result ▁set ▁and ▁move s ▁in ▁/ ▁/ ▁List ▁/ ▁/ ▁To ▁be ▁returned ▁while ▁( result . next ▁()) ▁( ▁/ ▁/ ▁Add ▁the ▁list ▁BeanPiatto ▁lista . add ▁( new ▁BeanPiatto ▁( result . getInt ▁( ▁" Pr ice "), ▁result ▁ . ▁ getString ▁( ▁" Name "), ▁result . getInt ▁( ▁" IdMenu "), ▁result ▁ . ▁ getInt ▁( ▁" id ▁ "))); ▁) ▁return ▁list ; ▁) ▁/ ▁/ ▁Al way s ▁runs ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁)