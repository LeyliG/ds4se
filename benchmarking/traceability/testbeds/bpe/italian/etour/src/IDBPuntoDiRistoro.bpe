▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁unisa . gps . etour . bean . Bean PuntoDiRistoro ; ▁import ▁unisa . gps . etour . bean . BeanTag ; ▁import ▁unisa . gps . etour . util . Punto 3 D ; ▁/ ▁** ▁* ▁Interface ▁for ▁management ▁of ▁eateries ▁in ▁the ▁database ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Mart one ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Project ▁- ▁Copy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁public ▁interface ▁I DBPuntoDiRistoro ▁( ▁/ ▁** ▁* ▁Add ▁a ▁refreshment ▁* ▁* ▁@ ▁Param ▁pPuntoDiRistoro ▁Refreshment ▁to ▁add ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁public ▁boolean ▁inserisci PuntoDiRistoro ▁( Bean PuntoDiRistoro ▁pPuntoDiRistoro ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Modify ▁a ▁refreshment ▁* ▁* ▁@ ▁Param ▁pPuntoDiRistoro ▁Refreshment ▁to ▁edit ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁True ▁if ▁and ▁' be en ▁changed ▁otherwise ▁false ▁* ▁/ ▁public ▁boolean ▁modifica PuntoDiRistoro ▁( Bean PuntoDiRistoro ▁pPuntoDiRistoro ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Delete ▁a ▁refreshment ▁* ▁* ▁@ ▁Param ▁ID ▁p IdPuntoDiRistoro ▁Refreshment ▁to ▁eliminate ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁True ▁if ▁and ▁' have ▁be en ▁deleted ▁false ▁otherwise ▁* ▁/ ▁public ▁boolean ▁cancella PuntoDiRistoro ▁( int ▁p IdPuntoDiRistoro ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁data ▁from ▁a ▁point ▁of ▁comfort ▁with ▁the ▁ID ▁given ▁as ▁argument ▁* ▁* ▁@ ▁Param ▁pId ▁point ▁identificat ion ▁Refreshments ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁Refreshment ▁* ▁/ ▁public ▁Bean PuntoDiRistoro ▁ottieni PuntoDiRistoro ▁( int ▁pid ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁A dvanced ▁Search . ▁Return s ▁the ▁list ▁of ▁eateries ▁that ▁have ▁in ▁* ▁Name ▁or ▁description ▁given ▁string ▁as ▁input , ▁sort ed ▁according ▁to ▁* ▁Preferences ▁of ▁tourists , ▁the ▁tags ▁and ▁filter ed ▁according ▁to ▁the ▁distance ▁* ▁Max . ▁The ▁list ▁returned ▁contains ▁on ly ▁the ▁number ▁of ▁ca tering ▁outlets ▁input ▁data . ▁* ▁To ▁scroll ▁the ▁real ▁list , ▁which ▁may ▁contain ▁mu ltipl e ▁' items , ▁you ▁* ▁Use ▁paramtro ▁num Pagina . ▁* ▁* ▁@ ▁Param ▁Id ▁pIdTurista ▁tourists ▁who ▁car ri ed ▁out ▁the ▁research ▁PKeyword ▁* ▁@ ▁ param ▁string ▁that ▁contains ▁the ▁keyword ▁to ▁search ▁the ▁* ▁Name ▁or ▁description ▁of ▁refreshment ▁* ▁@ ▁Param ▁pTags ▁list ▁of ▁tags ▁used ▁to ▁filter ▁the ▁search . ▁the ▁* ▁M aximum ▁number ▁of ▁tags ▁to ▁be ▁included ▁should ▁not ▁exceed ▁five ▁* ▁Units ' . ▁I f ▁you ▁exceed ▁this ▁number ▁the ▁other ▁tags ▁* ▁Exce s s ▁will ▁be ▁i gnore d . ▁* ▁@ ▁Param ▁pNumeroPagina ▁The ▁page ▁number ▁you ▁want ▁to ▁view . ▁O ▁* ▁The ▁1 ▁page ▁( the ▁first ▁10 ▁results ) , ▁1 ▁for ▁2 ▁page ▁( s ▁* ▁Results ▁from ▁11 ▁to ▁20) ▁etc ▁... ▁* ▁* ▁@ ▁Param ▁pPosizione ▁position ▁of ▁the ▁person ▁who ▁car ri ed ▁out ▁the ▁research ▁* ▁@ ▁Param ▁int ▁Number ▁of ▁elements ▁to ▁return ▁p NumeroElementi PerPagina ▁* ▁@ ▁Param ▁ pDistanzaMassima ▁M aximum ▁distance ▁from ▁the ▁user ▁to ▁refreshment ▁* ▁To ▁seek ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁list ▁containing ▁ten ▁points ▁Refreshments ▁* ▁/ ▁< Bean PuntoDiRistoro > ▁ricerca Avanzata ▁public ▁ArrayList ▁( int ▁pIdTurista , ▁PKeyword ▁String , ▁ArrayList ▁< BeanTag > ▁pTags , ▁pNumeroPagina ▁int , ▁int ▁p NumeroElementi PerPagina , ▁Punto 3 D ▁pPosizione , ▁double ▁ pDistanzaMassima ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Method ▁to ▁get ▁the ▁number ▁of ▁elements ▁to ▁search . ▁* ▁* ▁@ ▁Se e ▁ricerca Avanzata ▁() ▁* ▁@ ▁Param ▁Id ▁pIdTurista ▁tourists ▁who ▁car ri ed ▁out ▁the ▁research ▁PKeyword ▁* ▁@ ▁ param ▁string ▁that ▁contains ▁the ▁keyword ▁to ▁search ▁the ▁* ▁Name ▁or ▁description ▁of ▁refreshment ▁* ▁@ ▁Param ▁pTags ▁list ▁of ▁tags ▁used ▁to ▁filter ▁the ▁search . ▁the ▁* ▁M aximum ▁number ▁of ▁tags ▁to ▁be ▁included ▁should ▁not ▁exceed ▁five ▁* ▁Units ' . ▁I f ▁you ▁exceed ▁this ▁number ▁the ▁other ▁tags ▁* ▁Exce s s ▁will ▁be ▁i gnore d . ▁* ▁* ▁@ ▁Param ▁pPosizione ▁position ▁of ▁the ▁person ▁who ▁car ri ed ▁out ▁the ▁research ▁* ▁@ ▁Param ▁ pDistanzaMassima ▁M aximum ▁distance ▁from ▁the ▁user ▁to ▁refreshment ▁* ▁To ▁seek ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁number ▁of ▁pages . ▁* ▁/ ▁public ▁int ▁ottieni NumeroElementi RicercaAvanzata ▁( int ▁pIdTurista , ▁PKeyword ▁String , ▁ArrayList ▁< BeanTag > ▁pTags , ▁Punto 3 D ▁pPosizione , ▁double ▁ pDistanzaMassima ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Research . ▁Return s ▁the ▁list ▁of ▁eateries ▁that ▁have ▁the ▁name ▁or ▁* ▁Description ▁given ▁string ▁as ▁input , ▁filter ed ▁and ▁tags ▁* ▁A ccording ▁to ▁the ▁maximum ▁distance . ▁The ▁returned ▁list ▁contains ▁the ▁number ▁of ▁* ▁Point s ▁Refreshments ▁input ▁data . ▁To ▁scroll ▁the ▁real ▁list , ▁which ▁* ▁Ma y ▁contain ▁mo re ▁' items , ▁you ▁use ▁the ▁paramtro ▁* ▁ N um Pagina . ▁* ▁PKeyword ▁* ▁@ ▁ param ▁string ▁that ▁contains ▁the ▁keyword ▁to ▁search ▁the ▁* ▁Name ▁or ▁description ▁of ▁refreshment ▁* ▁@ ▁Param ▁pTags ▁list ▁of ▁tags ▁used ▁to ▁filter ▁the ▁search . ▁the ▁* ▁M aximum ▁number ▁of ▁tags ▁to ▁be ▁included ▁should ▁not ▁exceed ▁five ▁* ▁Units ' . ▁I f ▁you ▁exceed ▁this ▁number ▁the ▁other ▁tags ▁* ▁Exce s s ▁will ▁be ▁i gnore d . ▁* ▁@ ▁Param ▁pNumeroPagina ▁The ▁page ▁number ▁you ▁want ▁to ▁view . ▁O ▁* ▁The ▁1 ▁page ▁( the ▁first ▁10 ▁results ) , ▁1 ▁for ▁2 ▁page ▁( s ▁* ▁Results ▁from ▁11 ▁to ▁20) ▁etc ▁... ▁* ▁* ▁@ ▁Param ▁pPosizione ▁position ▁of ▁the ▁person ▁who ▁car ri ed ▁out ▁the ▁research ▁* ▁@ ▁Param ▁ pDistanzaMassima ▁M aximum ▁distance ▁from ▁the ▁user ▁to ▁refreshment ▁* ▁@ ▁Param ▁int ▁Number ▁of ▁elements ▁to ▁return ▁p NumeroElementi PerPagina ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁list ▁containing ▁ten ▁points ▁Refreshments ▁* ▁/ ▁public ▁ArrayList ▁< Bean PuntoDiRistoro > ▁search ▁( String ▁pKeyword , ▁ArrayList ▁< BeanTag > ▁pTags , ▁pNumeroPagina ▁int , ▁int ▁p NumeroElementi PerPagina , ▁Punto 3 D ▁pPosizione , ▁double ▁ pDistanzaMassima ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Method ▁to ▁get ▁you ▁the ▁elements ▁for ▁an ▁advanced ▁search . ▁* ▁* ▁@ ▁Se e ▁search ▁() ▁* ▁@ ▁Param ▁username ▁ pUsernameTurista ▁tourists ▁who ▁car ri ed ▁out ▁the ▁research ▁PKeyword ▁* ▁@ ▁ param ▁string ▁that ▁contains ▁the ▁keyword ▁to ▁search ▁the ▁* ▁Name ▁or ▁description ▁of ▁refreshment ▁* ▁@ ▁Param ▁pTags ▁list ▁of ▁tags ▁used ▁to ▁filter ▁the ▁search . ▁The ▁* ▁M aximum ▁number ▁of ▁tags ▁to ▁be ▁included ▁should ▁not ▁exceed ▁five ▁* ▁Units ' . ▁I f ▁you ▁exceed ▁this ▁number ▁the ▁other ▁tags ▁* ▁Exce s s ▁will ▁be ▁i gnore d . ▁* ▁@ ▁Param ▁pPosizione ▁position ▁of ▁the ▁person ▁who ▁car ri ed ▁out ▁the ▁research ▁* ▁@ ▁Param ▁ pDistanzaMassima ▁M aximum ▁distance ▁from ▁the ▁user ▁to ▁refreshment ▁* ▁To ▁seek ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁number ▁of ▁pages . ▁* ▁/ ▁public ▁int ▁ottieniNumero ElementiRicerca ▁( String ▁pKeyword , ▁ArrayList ▁< BeanTag > ▁pTags , ▁Punto 3 D ▁pPosizione , ▁double ▁ pDistanzaMassima ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁a ▁list ▁of ▁all ▁the ▁refreshment ▁* ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁list ▁of ▁all ▁the ▁refreshment ▁* ▁/ ▁< Bean PuntoDiRistoro > ▁ottieniLista PR ▁public ▁ArrayList ▁() ▁throws ▁SQLException ; ▁)