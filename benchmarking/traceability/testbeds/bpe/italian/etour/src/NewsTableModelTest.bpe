▁/ ▁** ▁* ▁Class ▁tests ▁for ▁NewsTableModel ▁* ▁* ▁@ ▁Auth or ▁M ario ▁Ga llo ▁* ▁@ ▁Version ▁0.1 ▁* ▁* ▁ © ▁ 2007 ▁eTour ▁Project ▁- ▁Copy right ▁by ▁DMI ▁SE ▁@ ▁ SA ▁Lab ▁- ▁University ▁of ▁Salerno ▁* ▁/ ▁p ackage ▁unisa . gps . etour . gui . operatoreagenzia . tables . test ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . Date ; ▁import ▁unisa . gps . etour . bean . BeanNews ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . tables . NewsTableModel ; ▁import ▁junit . frame work . TestCase ; ▁public ▁class ▁ TestCase ▁ext ends ▁NewsTableModel Test ▁( ▁private ▁NewsTableModel ▁TableModel ; ▁P rivate ▁BeanNews ▁ aNews ; ▁P rivate ▁BeanNews ▁ aNewsModificata ; ▁public ▁NewsTableModel Test ▁( String ▁pName ) ▁( ▁super ▁( pName ); ▁ aNews ▁= ▁new ▁BeanNews ▁( ▁" A n ▁ex ample ▁of ▁news ", ▁new ▁Date ▁(), ▁new ▁Date ▁(), ▁2, 1); ▁ aNewsModificata ▁= ▁new ▁BeanNews ▁( ▁" A ▁news ▁amended ▁sample ", ▁new ▁Date ▁(), ▁new ▁Date ▁(), ▁3, 1); ▁) ▁prot ected ▁void ▁set Up ▁() ▁throws ▁Exception ▁( ▁super . set Up ▁(); ▁NewsTableModel ▁= ▁new ▁TableModel ▁(); ▁) ▁/ ▁* ▁* ▁Verif y ▁the ▁beha vi or ▁of ▁the ▁m anufacturer ▁with ▁an ▁ArrayList ▁of ▁BeanNews . ▁* ▁/ ▁public ▁void ▁test Costruttore ConArrayList ▁() ▁( ▁< BeanNews > ▁ArrayList ▁test ▁= ▁new ▁ArrayList ▁< BeanNews > ▁(); ▁for ▁( int ▁i ▁= ▁0; ▁i ▁ <10; ▁i ▁+ ▁+) ▁( ▁test . add ▁( new ▁BeanNews ▁( ▁" text " ▁+ ▁i , ▁new ▁Date ▁(), ▁new ▁Date ▁(), ▁ 5, ▁i )); ▁) ▁NewsTableModel ▁= ▁new ▁TableModel ▁( test ); ▁for ▁( int ▁i ▁= ▁0; ▁i ▁ <10; ▁i ▁+ ▁+) ▁( ▁assert S ame ▁( test . get ▁( i ) . ▁getId ▁(), ▁table Model . getID ▁( i )); ▁) ▁) ▁/ ▁* ▁* ▁Verif y ▁the ▁m anufacturer ▁with ▁an ▁ArrayList ▁Comp or ▁zero . ▁* ▁/ ▁public ▁void ▁test Costruttore ConArrayList Null ▁() ▁( ▁NewsTableModel ▁= ▁new ▁TableModel ▁( null ); ▁) ▁/ ▁* ▁* ▁Verif y ▁the ▁beha vi or ▁of ▁the ▁m anufacturer ▁with ▁an ▁empty ▁ArrayList . ▁* ▁/ ▁public ▁void ▁test Costruttore ConArrayList V u o to ▁() ▁( ▁NewsTableModel ▁= ▁new ▁TableModel ▁( < BeanNews > ▁new ▁ArrayList ▁()); ▁) ▁/ ▁* ▁* ▁Verif y ▁the ▁beha vi or ▁of ▁the ▁method ▁with ▁the ▁correct ▁parameters . ▁* ▁/ ▁public ▁void ▁testGetValueAt Parametri Corretti ▁() ▁( ▁/ ▁/ ▁P ut ▁bean ▁in ▁two ▁model ▁test . ▁table Model . insertNew s ▁( aNews ); ▁table Model . insertNew s ▁( aNewsModificata ); ▁/ ▁/ ▁Verif y ▁the ▁data ▁entered . ▁assert S ame ▁( aNews . getNews ▁(), ▁table Model . get ValueAt ▁(0, ▁0) ); ▁assert S ame ▁( aNews . get Priorita ▁(), ▁table Model . get ValueAt ▁(0, ▁1) ); ▁assert S ame ▁( aNewsModificata . getNews ▁(), ▁table Model . get ValueAt ▁( 1, ▁0) ); ▁assert S ame ▁( aNewsModificata . get Priorita ▁(), ▁table Model . get ValueAt ▁( 1, ▁1) ); ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁the ▁method ▁with ▁an ▁index ▁row ▁fold . ▁* ▁/ ▁public ▁void ▁testGetValueAt Riga S balla ta ▁() ▁( ▁TR Y ▁( ▁table Model . get ValueAt ▁(12 , ▁0) ; ▁fail ▁( ▁" S hould ▁be ▁thrown "); ▁) ▁catch ▁( Illegal A rgumentException ▁success ) ▁( ▁) ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁of ▁the ▁method ▁with ▁a ▁column ▁index ▁bus ted . ▁* ▁/ ▁public ▁void ▁testGetValueAt Col on na S balla ta ▁() ▁( ▁TR Y ▁( ▁table Model . get ValueAt ▁(0, ▁-1213 34 ); ▁fail ▁( ▁" S hould ▁be ▁thrown "); ▁) ▁catch ▁( Illegal A rgumentException ▁success ) ▁( ▁) ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁method ▁with ▁proper ▁parameter . ▁* ▁/ ▁public ▁void ▁test Insert NewsParametro Corrett o ▁() ▁( ▁table Model . insertNew s ▁( aNews ); ▁assert S ame ▁( aNews . getId ▁(), ▁table Model . getID ▁(0) ); ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁method ▁with ▁parameter ▁to ▁null ▁* ▁/ ▁public ▁void ▁test Insert NewsParametro Null ▁() ▁( ▁TR Y ▁( ▁table Model . insertNew s ▁( null ); ▁fail ▁( ▁" S hould ▁be ▁thrown "); ▁) ▁catch ▁( Illegal A rgumentException ▁success ) ▁( ▁) ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁method ▁with ▁proper ▁parameter . ▁* ▁/ ▁public ▁void ▁test Update NewsParametro Corrett o ▁() ▁( ▁table Model . insertNew s ▁( aNews ); ▁table Model . update News ▁( aNewsModificata ); ▁assert S ame ▁( aNewsModificata . getNews ▁(), ▁table Model . get ValueAt ▁(0, ▁0) ); ▁assert S ame ▁( aNewsModificata . get Priorita ▁(), ▁table Model . get ValueAt ▁(0, ▁1) ); ▁assert S ame ▁( aNewsModificata . getId ▁(), ▁table Model . getID ▁(0) ); ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁method ▁with ▁parameter ▁to ▁null ▁* ▁/ ▁public ▁void ▁test Update NewsParametro Null ▁() ▁( ▁TR Y ▁( ▁table Model . update News ▁( null ); ▁fail ▁( ▁" S hould ▁be ▁thrown "); ▁) ▁catch ▁( Illegal A rgumentException ▁success ) ▁( ▁) ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁method ▁with ▁proper ▁parameter . ▁* ▁/ ▁public ▁void ▁testRemoveNews Parametro Corrett o ▁() ▁( ▁table Model . insertNew s ▁( aNews ); ▁assert S ame ▁( aNews . getId ▁(), ▁table Model . remove News ▁(0) ); ▁) ▁/ ▁* ▁* ▁Verif y ▁Comp or ▁of ▁the ▁method ▁with ▁row ▁index ▁bus ted . ▁* ▁/ ▁public ▁void ▁testRemoveNews Riga S balla ta ▁() ▁( ▁TR Y ▁( ▁table Model . remove News ▁(-1 23 1); ▁fail ▁( ▁" S hould ▁be ▁thrown "); ▁) ▁catch ▁( Illegal A rgumentException ▁success ) ▁() ▁) ▁)