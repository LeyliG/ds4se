▁ ï»¿ p ackage ▁unisa . gps . etour . control . f uzzy ; ▁import ▁java . io . Serializable ; ▁import ▁java . util . Hashtable ; ▁public ▁class ▁Category ▁implements ▁Serializable ▁( ▁/ ▁** ▁* ▁Class ▁that ▁ describ es ▁the ▁character istics ▁of ▁a ▁Category ▁* ▁Contains ▁a ▁ Hashtable ▁that ▁represent s ▁the ▁dictionary ▁on ▁* ▁The ▁category ▁that ▁contains ▁and ▁for ▁each ▁term ▁associated ▁* ▁In ▁the ▁category ▁values ▁of ▁frequency , ▁distance ▁and ▁relevance . ▁* ▁Provide s ▁methods ▁to ▁access , ▁modify ▁and ▁a u x i li ary ▁methods . ▁* ▁/ ▁private ▁static ▁final ▁long ▁s erial Version UID ▁= - 86 522 3 29 4 6927 756 0 89 L ; ▁private ▁String ▁name ; ▁/ ▁/ ▁name ▁of ▁the ▁category ▁private ▁ Hashtable ▁< string , ▁float [] > ▁terms , ▁/ ▁/ ▁list ▁of ▁terms ▁and ▁the ir ▁fre que nc ies ▁and ▁distance ▁rila vanza ▁/ ▁* ▁* ▁M anufacturer : ▁* ▁Get ▁the ▁category ▁name ▁as ▁a ▁parameter ▁to ▁create ▁* ▁/ ▁public ▁Category ▁( String ▁Pnom ) ▁( ▁name ▁= ▁Pnom ; ▁terms ▁< String , float [] > ▁= ▁new ▁ Hashtable ▁(); ▁) ▁/ ▁* ▁* ▁Return s ▁the ▁output ▁ Hashtable ▁containing ▁the ▁terms ▁* ▁With ▁the ▁res p e c tive ▁values ▁of ▁frequency , ▁relevance ▁and ▁distance ▁* ▁/ ▁< string , ▁float [] > ▁getTermin i ▁public ▁ Hashtable ▁() ▁( ▁return ▁terms ; ▁) ▁/ ▁* ▁* ▁Return s ▁the ▁name ▁of ▁the ▁output ▁category ▁* ▁/ ▁public ▁String ▁getName ▁() ▁( ▁return ▁name ; ▁) ▁/ ▁* ▁* ▁Get ▁the ▁string ▁as ▁a ▁parameter ▁represent ing ▁the ▁term ▁* ▁Of ▁which ▁you ▁want ▁to ▁pick ▁the ▁values ▁of ▁frequency , ▁range ▁and ▁bearing ▁* ▁/ ▁public ▁float ▁[] ▁get val ▁( pTermine ▁String ) ▁throws ▁Null PointerException ▁( ▁if ▁( esiste Termine ▁( pTermine )) ▁return ▁termini . get ▁( pTermine ); ▁return ▁null ; ▁) ▁/ ▁* ▁* ▁A giunge ▁an ▁end ▁to ▁dizi nario ▁category ▁* ▁/ ▁public ▁void ▁add Termine ▁( String ▁pTermine ) ▁( ▁termini . put ▁( pTermine , ▁new ▁float ▁[3] ); ▁) ▁/ ▁* ▁* ▁A giunge ▁an ▁end ▁to ▁dizi nario ▁category ▁* ▁Se ven ▁al so ▁the ▁values ▁of ▁frequency , ▁distance ▁and ▁rila vanza ▁* ▁/ ▁public ▁boolean ▁add Termine ▁( String ▁pTermine , ▁float ▁[] ▁pVal ) ▁( ▁if ▁( ( p Val ▁== ▁null ) ▁| ▁| ▁( pTermine . equals ▁("")) ) ▁return ▁false ; ▁termini . put ▁( pTermine , ▁pVal ); ▁return ▁true ; ▁) ▁/ ▁* ▁* ▁Set ▁the ▁values ▁for ▁the ▁period ▁pTermine ▁* ▁/ ▁public ▁boolean ▁set Val Termine ▁( String ▁pTermine , ▁float ▁[] ▁pVal ) ▁throws ▁Null PointerException ▁( ▁if ▁( esiste Termine ▁( pTermine )) ▁( ▁termini . put ▁( pTermine , ▁pVal ); ▁return ▁true ; ▁) ▁return ▁false ; ▁) ▁public ▁void ▁setTermin i ▁( Hashtable ▁< String , float [] > ▁pTermini ) ▁( ▁Term ▁= ▁pTermini ; ▁) ▁/ ▁* ▁* ▁Return s ▁True ▁if ▁the ▁term ▁is ▁present ▁in ▁* ▁Di ction ary ▁of ▁Category ▁False ▁otherwise ▁* ▁/ ▁public ▁boolean ▁esiste Termine ▁( String ▁pTermine ) ▁( ▁TR Y ▁( ▁float ▁[] ▁ret ▁= ▁termini . get ▁( pTermine ); ▁if ▁( re t ! ▁= ▁null ) ▁return ▁true ; ▁) ▁catch ▁( Null PointerException ▁e ) ▁( ▁return ▁false ; ▁) ▁return ▁false ; ▁) ▁)