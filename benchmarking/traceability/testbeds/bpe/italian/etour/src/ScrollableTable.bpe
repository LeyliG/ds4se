▁p ackage ▁unisa . gps . etour . gui . operatoreagenzia . tables ; ▁import ▁java . awt ▁ .* ; ▁import ▁java x . swing . JTable ; ▁import ▁java x . swing . Scrollable ; ▁import ▁java x . swing . SwingConstants ; ▁table ▁ .* ; ▁/ ▁** ▁* ▁Create ▁a ▁custom ▁JTable ▁that ▁can ▁be ▁displayed ▁through ▁* ▁Component s ▁that ▁enable ▁scroll ing . ▁* ▁@ ▁Se e ▁java x . swing . JTable ▁* ▁@ ▁Se e ▁java x . swing . Scrollable ▁* ▁@ ▁Auth or ▁ _ On i Z u K a _ ▁* ▁@ ▁Version ▁1.0 ▁* ▁/ ▁public ▁class ▁ ScrollableTable ▁ext ends ▁JTable ▁implements ▁ Scrollable ▁( ▁private ▁static ▁final ▁int ▁ maxUnitIncrement ▁= ▁20 ; ▁public ▁ ScrollableTable ▁() ▁( ▁super ▁(); ▁) ▁public ▁ ScrollableTable ▁( TableModel ▁t m ) ▁( ▁super ▁( t m ); ▁set Grid Color ▁( Color . LIGHT _ GR A Y ); ▁set Inter cell S pac ing ▁( new ▁Dimension ▁(5, 0) ); ▁) ▁g etPreferred Scrollable Viewport Size ▁public ▁Dimension ▁() ▁( ▁G etPreferredSize ▁return ▁(); ▁) ▁public ▁int ▁getScrollable Uni t In cre ment ▁( Rectangle ▁visibleRect , ▁int ▁ orientation , ▁int ▁direction ) ▁( ▁p osCorrente ▁int ▁= ▁0; ▁if ▁( orientation ▁== ▁ SwingConstants . HORIZONTAL ) ▁( ▁p osCorrente ▁= ▁visibleRect . x ; ▁) ▁else ▁( ▁p osCorrente ▁= ▁visibleRect . y ; ▁) ▁if ▁( direct ion ▁<0) ▁( ▁int ▁= ▁new Pos ▁p osCorrente ▁- ▁( p osCorrente ▁/ ▁ maxUnitIncrement ) ▁* ▁Ma xUnit In cre ment ; ▁return ▁( new Pos ▁== ▁0) ? ▁ maxUnitIncrement : ▁new Pos ; ▁) ▁else ▁( ▁return ▁( ( p osCorrente ▁/ ▁ maxUnitIncrement ) ▁+ ▁1) ▁* ▁ maxUnitIncrement ▁- ▁P osCorrente ; ▁) ▁) ▁public ▁int ▁getScrollable Block In cre ment ▁( Rectangle ▁visibleRect , ▁int ▁ orientation , ▁int ▁direction ) ▁( ▁if ▁( orientation ▁== ▁ SwingConstants . HORIZONTAL ) ▁( ▁return ▁visibleRect . width ▁- ▁ maxUnitIncrement ; ▁) ▁else ▁( ▁return ▁visibleRect . height ▁- ▁ maxUnitIncrement ; ▁) ▁) ▁public ▁boolean ▁getScrollable TracksViewport W idth ▁() ▁( ▁return ▁false ; ▁) ▁public ▁boolean ▁getScrollable TracksViewport H eight ▁() ▁( ▁return ▁false ; ▁) ▁)